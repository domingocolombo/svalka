# Почему не работает?
data_zero_age = data[ data['dob_years'] == 0]
def replace_age(data):
    for row in data:
        if data['income_type'] == 'госслужащий':
            if data['gender'] == 'F':
                data['dob_years'] = 41
            if data['gender'] == 'M':
                data['dob_years'] = 37
        if data['income_type'] == 'компаньон':
            if data['gender'] == 'F':
                data['dob_years'] = 40
            if data['gender'] == 'M':
                data['dob_years'] = 38
        if data['income_type'] == 'пенсионер':
            if data['gender'] == 'F':
                data['dob_years'] = 60
            if data['gender'] == 'M':
                data['dob_years'] = 60
        if data['income_type'] == 'сотрудник':
            if data['gender'] == 'F':
                data['dob_years'] = 40
            if data['gender'] == 'M':
                data['dob_years'] = 38
replace_age(data_zero_age)
data_zero_age


data_zero_age = data[ data['dob_years'] == 0]
def replace_age(data):
    if data['dob_years'] == 0:
        if data['income_type'] == 'госслужащий':
            if data['gender'] == 'F':
                return 41
            if data['gender'] == 'M':
                return 37
        if data['income_type'] == 'компаньон':
            if data['gender'] == 'F':
                return 40
            if data['gender'] == 'M':
                return 38
        if data['income_type'] == 'пенсионер':
            if data['gender'] == 'F':
                return 60
            if data['gender'] == 'M':
                return 60
        if data['income_type'] == 'сотрудник':
            if data['gender'] == 'F':
                return 40
            if data['gender'] == 'M':
                return 38
data['newcat']=data['dob_years'].apply(replace_age)
data_zero_age



#Работают, но добавляет новый столбец
data2 = data

def replace_age(income_type):
    if
    if income_type == 'госслужащий':
        result = 40
    elif income_type == 'компаньон':
        result = 39
    elif income_type == 'пенсионер':
        result = 60
    elif income_type == 'сотрудник':
        result = 39
    elif income_type == 'безработный':
        result = 40
    elif income_type == 'в декрете':
        result = 39
    elif income_type == 'предприниматель':
        result = 60
    elif income_type == 'студент':
        result = 39
    else:
        result = 0
    return result
data2['dob_years2'] = data2['income_type'].apply(replace_age)

data2


РАбочий код

data_age_median = data.groupby('income_type')['dob_years'].median()

data_pivot = data.pivot_table(index=['income_type'], values='dob_years', aggfunc='median') #Создаю библиотеку по income_type
data_pivot = data_pivot.rename(columns={"dob_years":"dob_years_median"})

data2 = data

data2 = data2.merge(data_pivot, on='income_type', how='left')

data2['dob_years_median'] = data2['dob_years_median'].astype('int')


data2.loc[data2['dob_years'] == 0, 'dob_years'] = data2['dob_years_median']


data2 = data2.loc[:, 'children': 'purpose']

#data_zero_age = data2[ data2['dob_years'] == 0]

data2.head(5)

#data2['dob_years'].sort_values().unique()

#print(data_zero_age.head())

